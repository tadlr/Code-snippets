{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
    'container'
  ]
%}

{% set allowed_tags = [] %}
{% for key, item in node.field_toc_configs %}
	{% set allowed_tags = allowed_tags|merge([item.value]) %}
{% endfor %}

{% set location = content.field_location.0|render|trim is not empty ? content.field_location.0|render ~ ' - ' %}

{% set excluded_fields = [
  'field_date',
  'field_location',
  'field_news_type',
  'field_quick_facts',
  'field_show_contacts',
  'field_related_links'
] %}


<article{{attributes.addClass(classes)|without('role','about')}}>
	{{ title_prefix }}
  <div class="row">
    <div class="col-xs-12">
      <h1{{title_attributes.setAttribute('id', 'wb-cont').addClass('mrgn-bttm-lg')}}>{{ label }}</h1>
    </div>
  </div>
	{{ title_suffix }}

  <div class="row">
    <div class="col-xs-12 mrgn-tp-md">
      <p class="news--date">{{ content.field_news_type.0 }} - {{ location }}{{content.field_date.0 }}</p>
      {{ content|without(excluded_fields) }} 
    </div>
  </div>

  {% if content.field_show_contacts.0 == true or content.field_quick_facts|render|striptags|trim %}
    <div class="row row-no-gutters wb-eqht-grd mrgn-tp-lg">
      {% if content.field_quick_facts|render|striptags|trim %}
        <div class="col-xs-12 col-sm-8 quick-facts">
          <div class="eqht-trgt padded bg-default">
            {{ content.field_quick_facts }}
          </div>
        </div>
      {% endif %}

      {% if content.field_show_contacts.0 %}
        <div class="col-xs-12 col-sm-4 text-center media-contact">
          <div class="eqht-trgt padded bg-primary">
            {{ media_contact }}
          </div>
        </div>
      {% endif %}
    </div>
  {% endif %}
</article>
