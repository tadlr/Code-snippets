<?php
use Drupal\Component\Render\FormattableMarkup;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess().
 */
function chrt_wxt_preprocess(&$variables, $hook) {
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
  $variables['site_slogan'] = $config->get('slogan');
  $variables['language'] = $language;
}

/**
 * Implements hook_preprocess_html().
 */
function chrt_wxt_preprocess_html(&$variables) {
  // add language code to body class
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['attributes']['class'][] = 'lang-' . $language;

  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node) {
    // add node id to body class
    $variables['attributes']['class'][] = 'node-' . $node->id();
  }

  // Add Microsoft Compatibility tag to HEAD
  $xuacompatible = [
    '#tag' => 'meta',
    '#attributes' => [
      'http-equiv' => 'x-ua-compatible',
      'content' => 'ie=edge',
    ],
  ];
  $variables['page']['#attached']['html_head'][] = [$xuacompatible, 'x-ua-compatible'];
}

/**
 * Implements hook_preprocess_page().
 */
function chrt_wxt_preprocess_page(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  $route_name = \Drupal::routeMatch()->getRouteName();

  $excluded_routes = ['entity.webform.canonical'];
  $excluded_bundles = ['webform'];

  if (in_array($route_name, $excluded_routes)) {
  }
  if ($node && $node->hasField('field_wdcb') || $node && $node->bundle() === 'webform') {
    $variables['is_wdcb'] = TRUE;
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function chrt_wxt_preprocess_views_view(&$variables) {
  $variables['attributes']['id'] = $variables['id'] . '-' . $variables['display_id'];
}

/**
 * Implements hook_preprocess_paragraph().
 */
function chrt_wxt_preprocess_paragraph(&$variables) {
  // add Paragaph id to each paragraph so they can be individually targeted.
  // This was explicitly added so we can use the background image and responsive background image
  // on paragraph elements.
  $variables['attributes']['id'] = 'paragraph-' . $variables['paragraph']->id();
}

/**
 * Implements hook_preprocess_media().
 */
function chrt_wxt_preprocess_media(&$variables) {
  $media = $variables['media'];

  $variables['attributes']['id'] = 'media-' . $media->id();
  $variables['attributes']['class'][] = $media->bundle();

  switch ($media->bundle()) {
    case 'video':
      // get and set video mime
      $file = $media->field_media_video_file->entity;
      $variables['filemime'] = $file->filemime->value;

      // get and set captions file mime
      $caption = $media->field_video_caption_file;
      if (!empty($caption)) {
        $caption_file = $caption->entity;
        $caption_file_mime = $caption_file->filemime->value;
        
        $variables['captions_type'] = $caption_file->filemime->value;
      }
      break;
  }
}

/**
 * Implements hook_preprocess_fieldset().
 */
function chrt_wxt_preprocess_fieldset(&$variables) {
  $variables['type'] = $variables['element']['#type'];
  $variables['has_parent'] = (empty($variables['element']['#webform_parent_key'])) ? false : true;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function chrt_wxt_preprocess_webform_section(&$variables) {
  $variables['has_parent'] = (empty($variables['element']['#webform_parent_key'])) ? false : true;
}

/**
 * Implements hook_preprocess_webform().
 */
// function chrt_wxt_preprocess_webform(&$variables) {
//   $webform = \Drupal::service('entity_type.manager')->getStorage('webform')->load($variables['element']['#webform_id']);

//   // Add categories to form element as a class
//   if (!empty($webform->get('categories'))) {
//     $categories = $webform->get('categories');

//     foreach ($categories as $category) {
//       $category = Html::cleanCssIdentifier(strtolower($category));
//       $variables['attributes']['class'][] = 'webform-category-' . $category;
//     }
//   }
// }

/**
 * Implements hook_preprocess_breadcrumb().
 */
// function chrt_wxt_preprocess_node(&$variables) {
//   $page_title = $variables['label'][0]['#context']['value'];
//   $variables['page_title'] = (is_string($page_title)) ? htmlspecialchars_decode(htmlspecialchars($page_title)) : htmlentities($page_title);
// }

