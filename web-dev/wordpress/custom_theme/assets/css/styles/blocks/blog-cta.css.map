{"version":3,"sources":["blog-cta.scss","blog-cta.css","../_variables.scss","../../../node_modules/bootstrap/scss/mixins/_gradients.scss","../common/mixins/_buttons.scss","../../../node_modules/bootstrap/scss/mixins/_border-radius.scss","../../../node_modules/bootstrap/scss/vendor/_rfs.scss","../../../node_modules/bootstrap/scss/mixins/_transition.scss","../../../node_modules/bootstrap/scss/mixins/_buttons.scss"],"names":[],"mappings":"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","file":"blog-cta.css","sourcesContent":["@import 'block-base';\n\n.timber-block .sk-blog-block.blog-cta {\n  margin-bottom: $contentPadding;\n}\n.timber-block .sk-blog-block.blog-cta,\n.sk-blog-block.blog-cta {\n  position: relative;\n  background-color: $blue-1;\n  @media screen and ($min768) {\n    min-height: 229px;\n  }\n  @media screen and ($mobile) {\n    min-height: 328px;\n  }\n  .inner-wrapper {\n    z-index: 1;\n    height: 100%;\n    position: relative;\n    gap: 10px;\n    @media screen and ($min1024) and ($max1200) {\n      background: linear-gradient(\n        90deg,\n        rgba(0, 46, 166, 1) 30%,\n        rgba(0, 46, 166, 0.8) 45%,\n        rgba(0, 46, 166, 0.2) 100%\n      );\n    }\n\n    .cta-content {\n      @media screen and ($min768) {\n        padding: 24px 34px 16px;\n        min-height: 229px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-evenly;\n      }\n\n      @media screen and ($max768) {\n        padding: 24px 16px;\n      }\n\n      h2 {\n        font-family: $redhat;\n        margin-bottom: 0.85rem;\n        font-weight: 700;\n        @media screen and ($min768) {\n          font-size: 32px;\n          line-height: 40px;\n        }\n\n        @media screen and ($max768) {\n          font-size: 24px;\n          line-height: 36px;\n        }\n      }\n\n      *,\n      p {\n        margin-bottom: 0.85rem;\n        font-family: $libre;\n        font-size: 18px;\n        line-height: 30px;\n        font-weight: 400;\n\n        :empty {\n          display: none !important;\n        }\n      }\n      .btn {\n        margin-bottom: 0;\n        width: fit-content;\n        font-family: $redhat;\n        font-size: 16px;\n        line-height: 20px;\n        font-weight: 700;\n        text-decoration: none !important;\n      }\n    }\n\n    .cta-form {\n      @media screen and ($min1024) {\n        padding: 10px 0 34px 34px;\n      }\n      @media screen and ($max1024) {\n        padding: 0 0 24px 24px;\n      }\n    }\n  }\n\n  &.w-svg {\n    @media screen and ($mobile) {\n      height: fit-content;\n      min-height: fit-content;\n    }\n    &::before {\n      content: '';\n      display: block;\n      background-image: url($ROOT_PATH + 'media/svgs/blog-cta.svg');\n      background-position: bottom right;\n      background-repeat: no-repeat;\n      background-size: contain;\n      width: 100%;\n      height: 85%;\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      z-index: 0;\n\n      @media screen and ($mobile) {\n        max-height: 200px;\n        height: 100%;\n      }\n    }\n    .cta-content {\n      @media screen and ($mobile) {\n        margin-bottom: 50px;\n      }\n    }\n  }\n\n  &.w-form {\n    .cta-content {\n      :last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  &.w-image {\n    .cta-content,\n    .cta-form {\n      @media screen and ($min1024) and ($max1200) {\n        max-width: 80%;\n        width: 100%;\n      }\n      @media screen and ($min768) {\n        max-width: 65%;\n      }\n    }\n    .image-block {\n      picture {\n        display: block;\n      }\n      img {\n        height: 100%;\n        object-fit: cover;\n        width: 100%;\n      }\n\n      @media screen and ($min768) {\n        position: absolute;\n        width: 35%;\n        height: 100%;\n        right: -1px;\n        mask: url($ROOT_PATH + 'media/svgs/blog-cta-bg.svg') no-repeat;\n        position: absolute;\n        mask-position: left;\n        mask-size: cover !important;\n        right: -1px;\n        width: 40%;\n        height: 100%;\n        left: unset;\n\n        img {\n          position: absolute;\n          right: 0;\n          object-position: 0 !important;\n        }\n      }\n      @media screen and ($min1024) and ($max1200) {\n        mask: unset;\n        position: absolute;\n        width: 80%;\n        height: 100%;\n        right: 0;\n        bottom: 0;\n        left: unset;\n\n        img {\n          position: absolute;\n          right: 0;\n          object-position: left bottom;\n        }\n      }\n\n      @media screen and ($max768) {\n        mask: url($ROOT_PATH + 'media/svgs/blog-cta-bg-mobile.svg') no-repeat;\n        mask-position: top;\n        max-height: 180px;\n        height: 195px;\n\n        picture {\n          max-height: 180px;\n          height: 195px;\n        }\n\n        img {\n          width: 100%;\n        }\n      }\n\n      @media screen and (min-width: 500px) and (max-width: 767px) {\n        height: 255px;\n        max-height: 235px;\n\n        picture {\n          height: 255px;\n          max-height: 235px;\n        }\n      }\n\n      mask-size: 100% 100% !important;\n    }\n  }\n\n  .newsletter-form {\n    .hbspt-form {\n      padding: 0 0 0 0;\n      background-color: transparent;\n\n      form {\n        margin-top: 0;\n\n        @media screen and (min-width: 1024px) and (max-width: 1400px) {\n          width: 100%;\n        }\n        @media screen and ($min1024) {\n          justify-content: flex-start;\n          gap: 10px;\n        }\n      }\n\n      label:not(.hs-form-checkbox-display):not(.hs-error-msg) {\n        @media screen and ($max1024) {\n          position: absolute;\n          top: -12px;\n          left: 22px;\n          background-color: #002ea6;\n        }\n      }\n\n      .hs-error-msg.hs-main-font-element,\n      .hs-error-msgs .hs-main-font-element {\n        color: $coral !important;\n      }\n\n      .hs_error_rollup {\n        display: none;\n      }\n\n      .hs_submit {\n        width: 100%;\n        .hs-button {\n          width: 100%;\n\n          &:hover,\n          &:focus {\n            background-color: $blue-1;\n            color: $white;\n          }\n        }\n\n        .actions {\n          width: fit-content;\n          @include bs-btn;\n          @include btn-download;\n          margin-bottom: 0;\n          width: fit-content;\n          font-family: $redhat;\n          font-size: 16px;\n          line-height: 20px;\n          font-weight: 700;\n\n          &:before {\n            background-image: url($ROOT_PATH + 'media/icons/blue-arrow.svg');\n          }\n\n          &:hover,\n          &:active,\n          &:focus-within,\n          &:focus-visible {\n            border: 1px solid $white;\n            input {\n              color: $white !important;\n            }\n            &:before {\n              background-image: url($ROOT_PATH + 'media/icons/green-arrow.svg');\n            }\n          }\n\n          .hs-button.primary.large {\n            transform: unset !important;\n            background-color: unset !important;\n            padding: unset !important;\n            font-size: unset !important;\n          }\n        }\n        width: fit-content;\n\n        @media screen and ($min1024) {\n          .actions {\n            width: fit-content;\n          }\n          width: fit-content;\n        }\n      }\n      .hs-email {\n        margin-bottom: 18px !important;\n        flex: 1;\n        @media screen and ($min1024) {\n          .hs-error-msgs {\n            position: absolute;\n          }\n        }\n\n        @media screen and (min-width: 1024px) and (max-width: 1250px) {\n          max-width: 275px;\n        }\n\n        @media screen and (max-width: 992px) {\n          max-width: 425px;\n        }\n      }\n    }\n\n    form {\n      flex-direction: column;\n      margin-top: 39px;\n      margin-left: 0;\n      width: 90%;\n    }\n  }\n\n  &.square {\n    .image-block {\n      position: relative;\n      right: auto;\n      height: 100%;\n      mask: unset;\n\n      img {\n        position: relative;\n      }\n    }\n\n    .cta-content,\n    .cta-content {\n      max-width: none;\n    }\n\n    .newsletter-form {\n      .hbspt-form form {\n        flex-direction: column;\n        align-items: flex-start;\n\n        .hs-error-msgs {\n          position: relative !important;\n        }\n      }\n    }\n  }\n}\n\n.article-main-content {\n  @media screen and ($min1024) and ($max1200) {\n    .b1lock--bsk8 {\n      width: 142% !important;\n      margin-left: -42%;\n      position: relative;\n      z-index: 10000;\n    }\n  }\n}\n",".timber-block .sk-blog-block.blog-cta {\n  margin-bottom: 27px;\n}\n\n.timber-block .sk-blog-block.blog-cta,\n.sk-blog-block.blog-cta {\n  position: relative;\n  background-color: #002ea6;\n}\n@media screen and (min-width: 768px) {\n  .timber-block .sk-blog-block.blog-cta,\n  .sk-blog-block.blog-cta {\n    min-height: 229px;\n  }\n}\n@media screen and (max-width: 767px) {\n  .timber-block .sk-blog-block.blog-cta,\n  .sk-blog-block.blog-cta {\n    min-height: 328px;\n  }\n}\n.timber-block .sk-blog-block.blog-cta .inner-wrapper,\n.sk-blog-block.blog-cta .inner-wrapper {\n  z-index: 1;\n  height: 100%;\n  position: relative;\n  gap: 10px;\n}\n@media screen and (min-width: 1025px) and (max-width: 1199px) {\n  .timber-block .sk-blog-block.blog-cta .inner-wrapper,\n  .sk-blog-block.blog-cta .inner-wrapper {\n    background: linear-gradient(90deg, rgb(0, 46, 166) 30%, rgba(0, 46, 166, 0.8) 45%, rgba(0, 46, 166, 0.2) 100%);\n  }\n}\n@media screen and (min-width: 768px) {\n  .timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content,\n  .sk-blog-block.blog-cta .inner-wrapper .cta-content {\n    padding: 24px 34px 16px;\n    min-height: 229px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n  }\n}\n@media screen and (max-width: 767px) {\n  .timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content,\n  .sk-blog-block.blog-cta .inner-wrapper .cta-content {\n    padding: 24px 16px;\n  }\n}\n.timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content h2,\n.sk-blog-block.blog-cta .inner-wrapper .cta-content h2 {\n  font-family: \"Red Hat Display\", sans-serif;\n  margin-bottom: 0.85rem;\n  font-weight: 700;\n}\n@media screen and (min-width: 768px) {\n  .timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content h2,\n  .sk-blog-block.blog-cta .inner-wrapper .cta-content h2 {\n    font-size: 32px;\n    line-height: 40px;\n  }\n}\n@media screen and (max-width: 767px) {\n  .timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content h2,\n  .sk-blog-block.blog-cta .inner-wrapper .cta-content h2 {\n    font-size: 24px;\n    line-height: 36px;\n  }\n}\n.timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content *,\n.timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content p,\n.sk-blog-block.blog-cta .inner-wrapper .cta-content *,\n.sk-blog-block.blog-cta .inner-wrapper .cta-content p {\n  margin-bottom: 0.85rem;\n  font-family: \"Libre Franklin\", sans-serif;\n  font-size: 18px;\n  line-height: 30px;\n  font-weight: 400;\n}\n.timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content * :empty,\n.timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content p :empty,\n.sk-blog-block.blog-cta .inner-wrapper .cta-content * :empty,\n.sk-blog-block.blog-cta .inner-wrapper .cta-content p :empty {\n  display: none !important;\n}\n.timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-content .btn,\n.sk-blog-block.blog-cta .inner-wrapper .cta-content .btn {\n  margin-bottom: 0;\n  width: fit-content;\n  font-family: \"Red Hat Display\", sans-serif;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 700;\n  text-decoration: none !important;\n}\n@media screen and (min-width: 1025px) {\n  .timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-form,\n  .sk-blog-block.blog-cta .inner-wrapper .cta-form {\n    padding: 10px 0 34px 34px;\n  }\n}\n@media screen and (max-width: 1024px) {\n  .timber-block .sk-blog-block.blog-cta .inner-wrapper .cta-form,\n  .sk-blog-block.blog-cta .inner-wrapper .cta-form {\n    padding: 0 0 24px 24px;\n  }\n}\n@media screen and (max-width: 767px) {\n  .timber-block .sk-blog-block.blog-cta.w-svg,\n  .sk-blog-block.blog-cta.w-svg {\n    height: fit-content;\n    min-height: fit-content;\n  }\n}\n.timber-block .sk-blog-block.blog-cta.w-svg::before,\n.sk-blog-block.blog-cta.w-svg::before {\n  content: \"\";\n  display: block;\n  background-image: url(\"/wp-content/themes/custom_theme/assets/media/svgs/blog-cta.svg\");\n  background-position: bottom right;\n  background-repeat: no-repeat;\n  background-size: contain;\n  width: 100%;\n  height: 85%;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  z-index: 0;\n}\n@media screen and (max-width: 767px) {\n  .timber-block .sk-blog-block.blog-cta.w-svg::before,\n  .sk-blog-block.blog-cta.w-svg::before {\n    max-height: 200px;\n    height: 100%;\n  }\n}\n@media screen and (max-width: 767px) {\n  .timber-block .sk-blog-block.blog-cta.w-svg .cta-content,\n  .sk-blog-block.blog-cta.w-svg .cta-content {\n    margin-bottom: 50px;\n  }\n}\n.timber-block .sk-blog-block.blog-cta.w-form .cta-content :last-child,\n.sk-blog-block.blog-cta.w-form .cta-content :last-child {\n  margin-bottom: 0;\n}\n@media screen and (min-width: 1025px) and (max-width: 1199px) {\n  .timber-block .sk-blog-block.blog-cta.w-image .cta-content,\n  .timber-block .sk-blog-block.blog-cta.w-image .cta-form,\n  .sk-blog-block.blog-cta.w-image .cta-content,\n  .sk-blog-block.blog-cta.w-image .cta-form {\n    max-width: 80%;\n    width: 100%;\n  }\n}\n@media screen and (min-width: 768px) {\n  .timber-block .sk-blog-block.blog-cta.w-image .cta-content,\n  .timber-block .sk-blog-block.blog-cta.w-image .cta-form,\n  .sk-blog-block.blog-cta.w-image .cta-content,\n  .sk-blog-block.blog-cta.w-image .cta-form {\n    max-width: 65%;\n  }\n}\n.timber-block .sk-blog-block.blog-cta.w-image .image-block,\n.sk-blog-block.blog-cta.w-image .image-block {\n  mask-size: 100% 100% !important;\n}\n.timber-block .sk-blog-block.blog-cta.w-image .image-block picture,\n.sk-blog-block.blog-cta.w-image .image-block picture {\n  display: block;\n}\n.timber-block .sk-blog-block.blog-cta.w-image .image-block img,\n.sk-blog-block.blog-cta.w-image .image-block img {\n  height: 100%;\n  object-fit: cover;\n  width: 100%;\n}\n@media screen and (min-width: 768px) {\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block,\n  .sk-blog-block.blog-cta.w-image .image-block {\n    position: absolute;\n    width: 35%;\n    height: 100%;\n    right: -1px;\n    mask: url(\"/wp-content/themes/custom_theme/assets/media/svgs/blog-cta-bg.svg\") no-repeat;\n    position: absolute;\n    mask-position: left;\n    mask-size: cover !important;\n    right: -1px;\n    width: 40%;\n    height: 100%;\n    left: unset;\n  }\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block img,\n  .sk-blog-block.blog-cta.w-image .image-block img {\n    position: absolute;\n    right: 0;\n    object-position: 0 !important;\n  }\n}\n@media screen and (min-width: 1025px) and (max-width: 1199px) {\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block,\n  .sk-blog-block.blog-cta.w-image .image-block {\n    mask: unset;\n    position: absolute;\n    width: 80%;\n    height: 100%;\n    right: 0;\n    bottom: 0;\n    left: unset;\n  }\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block img,\n  .sk-blog-block.blog-cta.w-image .image-block img {\n    position: absolute;\n    right: 0;\n    object-position: left bottom;\n  }\n}\n@media screen and (max-width: 767px) {\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block,\n  .sk-blog-block.blog-cta.w-image .image-block {\n    mask: url(\"/wp-content/themes/custom_theme/assets/media/svgs/blog-cta-bg-mobile.svg\") no-repeat;\n    mask-position: top;\n    max-height: 180px;\n    height: 195px;\n  }\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block picture,\n  .sk-blog-block.blog-cta.w-image .image-block picture {\n    max-height: 180px;\n    height: 195px;\n  }\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block img,\n  .sk-blog-block.blog-cta.w-image .image-block img {\n    width: 100%;\n  }\n}\n@media screen and (min-width: 500px) and (max-width: 767px) {\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block,\n  .sk-blog-block.blog-cta.w-image .image-block {\n    height: 255px;\n    max-height: 235px;\n  }\n  .timber-block .sk-blog-block.blog-cta.w-image .image-block picture,\n  .sk-blog-block.blog-cta.w-image .image-block picture {\n    height: 255px;\n    max-height: 235px;\n  }\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form {\n  padding: 0 0 0 0;\n  background-color: transparent;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form form,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form form {\n  margin-top: 0;\n}\n@media screen and (min-width: 1024px) and (max-width: 1400px) {\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form form,\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form form {\n    width: 100%;\n  }\n}\n@media screen and (min-width: 1025px) {\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form form,\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form form {\n    justify-content: flex-start;\n    gap: 10px;\n  }\n}\n@media screen and (max-width: 1024px) {\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form label:not(.hs-form-checkbox-display):not(.hs-error-msg),\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form label:not(.hs-form-checkbox-display):not(.hs-error-msg) {\n    position: absolute;\n    top: -12px;\n    left: 22px;\n    background-color: #002ea6;\n  }\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-error-msg.hs-main-font-element,\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-error-msgs .hs-main-font-element,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-error-msg.hs-main-font-element,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-error-msgs .hs-main-font-element {\n  color: rgb(252, 74, 107) !important;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_error_rollup,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_error_rollup {\n  display: none;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit {\n  width: 100%;\n  width: fit-content;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .hs-button,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .hs-button {\n  width: 100%;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .hs-button:hover, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .hs-button:focus,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .hs-button:hover,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .hs-button:focus {\n  background-color: #002ea6;\n  color: #fff;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions {\n  width: fit-content;\n  display: inline-block;\n  padding: var(--sk-btn-padding-y) var(--sk-btn-padding-x);\n  font-family: var(--sk-btn-font-family);\n  font-size: var(--sk-btn-font-size);\n  font-weight: var(--sk-btn-font-weight);\n  line-height: var(--sk-btn-line-height);\n  color: var(--sk-btn-color);\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  user-select: none;\n  border: var(--sk-btn-border-width) solid var(--sk-btn-border-color);\n  border-radius: var(--sk-btn-border-radius);\n  background-color: var(--sk-btn-bg);\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  --sk-btn-color: #002ea6;\n  --sk-btn-bg: #17fcc4;\n  --sk-btn-border-color: #002ea6;\n  --sk-btn-hover-color: #fff;\n  --sk-btn-hover-bg: #002ea6;\n  --sk-btn-hover-border-color: #fff;\n  --sk-btn-focus-shadow-rgb: 0, 46, 166;\n  --sk-btn-active-color: #000;\n  --sk-btn-active-bg: #45fdd0;\n  --sk-btn-active-border-color: #1a43af;\n  --sk-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --sk-btn-disabled-color: #000;\n  --sk-btn-disabled-bg: #17fcc4;\n  --sk-btn-disabled-border-color: #002ea6;\n  padding: 8px 24px;\n  border-radius: 24px;\n  border: 1px solid transparent;\n  font-size: 16px;\n  font-weight: 700;\n  font-family: \"Red Hat Display\", sans-serif;\n  display: inline-flex;\n  align-items: center;\n  transition: all 0.3s ease;\n  margin-bottom: 0;\n  width: fit-content;\n  font-family: \"Red Hat Display\", sans-serif;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 700;\n}\n@media (prefers-reduced-motion: reduce) {\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions,\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions {\n    transition: none;\n  }\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover {\n  color: var(--sk-btn-hover-color);\n  background-color: var(--sk-btn-hover-bg);\n  border-color: var(--sk-btn-hover-border-color);\n}\n.btn-check + .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover,\n.btn-check + .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover {\n  color: var(--sk-btn-color);\n  background-color: var(--sk-btn-bg);\n  border-color: var(--sk-btn-border-color);\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible {\n  color: var(--sk-btn-hover-color);\n  background-color: var(--sk-btn-hover-bg);\n  border-color: var(--sk-btn-hover-border-color);\n  outline: 0;\n  box-shadow: var(--sk-btn-focus-box-shadow);\n}\n.btn-check:focus-visible + .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions,\n.btn-check:focus-visible + .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions {\n  border-color: var(--sk-btn-hover-border-color);\n  outline: 0;\n  box-shadow: var(--sk-btn-focus-box-shadow);\n}\n.btn-check:checked + .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions, :not(.btn-check) + .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:first-child:active, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.active, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.show,\n.btn-check:checked + .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions,\n:not(.btn-check) + .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:first-child:active,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.active,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.show {\n  color: var(--sk-btn-active-color);\n  background-color: var(--sk-btn-active-bg);\n  border-color: var(--sk-btn-active-border-color);\n}\n.btn-check:checked + .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible, :not(.btn-check) + .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active:focus-visible, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:first-child:active:focus-visible, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.active:focus-visible, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.show:focus-visible,\n.btn-check:checked + .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible,\n:not(.btn-check) + .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active:focus-visible,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:first-child:active:focus-visible,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.active:focus-visible,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.show:focus-visible {\n  box-shadow: var(--sk-btn-focus-box-shadow);\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:disabled, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.disabled, fieldset:disabled .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:disabled,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions.disabled,\nfieldset:disabled .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions {\n  color: var(--sk-btn-disabled-color);\n  pointer-events: none;\n  background-color: var(--sk-btn-disabled-bg);\n  border-color: var(--sk-btn-disabled-border-color);\n  opacity: var(--sk-btn-disabled-opacity);\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:before {\n  content: \"\";\n  display: inline-block;\n  background-image: url(\"/wp-content/themes/custom_theme/assets/media/icons/blue-arrow.svg\");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n  transform: rotate(180deg);\n  transition: all 0.3s ease-in-out;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible {\n  flex-direction: row-reverse;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover:before, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active:before, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within:before, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible:before {\n  margin-right: 0;\n  margin-left: 8px;\n  background-image: url(\"/wp-content/themes/custom_theme/assets/media/icons/green-arrow.svg\");\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible {\n  background-color: #002ea6 !important;\n  color: #fff !important;\n  border-color: #fff !important;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:before {\n  background-image: url(\"/wp-content/themes/custom_theme/assets/media/icons/blue-arrow.svg\");\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible {\n  border: 1px solid #fff;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover input, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active input, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within input, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible input,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover input,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active input,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within input,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible input {\n  color: #fff !important;\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover:before, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active:before, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within:before, .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:hover:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:active:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-within:before,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions:focus-visible:before {\n  background-image: url(\"/wp-content/themes/custom_theme/assets/media/icons/green-arrow.svg\");\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions .hs-button.primary.large,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions .hs-button.primary.large {\n  transform: unset !important;\n  background-color: unset !important;\n  padding: unset !important;\n  font-size: unset !important;\n}\n@media screen and (min-width: 1025px) {\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit,\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit {\n    width: fit-content;\n  }\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions,\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs_submit .actions {\n    width: fit-content;\n  }\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-email,\n.sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-email {\n  margin-bottom: 18px !important;\n  flex: 1;\n}\n@media screen and (min-width: 1025px) {\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-email .hs-error-msgs,\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-email .hs-error-msgs {\n    position: absolute;\n  }\n}\n@media screen and (min-width: 1024px) and (max-width: 1250px) {\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-email,\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-email {\n    max-width: 275px;\n  }\n}\n@media screen and (max-width: 992px) {\n  .timber-block .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-email,\n  .sk-blog-block.blog-cta .newsletter-form .hbspt-form .hs-email {\n    max-width: 425px;\n  }\n}\n.timber-block .sk-blog-block.blog-cta .newsletter-form form,\n.sk-blog-block.blog-cta .newsletter-form form {\n  flex-direction: column;\n  margin-top: 39px;\n  margin-left: 0;\n  width: 90%;\n}\n.timber-block .sk-blog-block.blog-cta.square .image-block,\n.sk-blog-block.blog-cta.square .image-block {\n  position: relative;\n  right: auto;\n  height: 100%;\n  mask: unset;\n}\n.timber-block .sk-blog-block.blog-cta.square .image-block img,\n.sk-blog-block.blog-cta.square .image-block img {\n  position: relative;\n}\n.timber-block .sk-blog-block.blog-cta.square .cta-content,\n.timber-block .sk-blog-block.blog-cta.square .cta-content,\n.sk-blog-block.blog-cta.square .cta-content,\n.sk-blog-block.blog-cta.square .cta-content {\n  max-width: none;\n}\n.timber-block .sk-blog-block.blog-cta.square .newsletter-form .hbspt-form form,\n.sk-blog-block.blog-cta.square .newsletter-form .hbspt-form form {\n  flex-direction: column;\n  align-items: flex-start;\n}\n.timber-block .sk-blog-block.blog-cta.square .newsletter-form .hbspt-form form .hs-error-msgs,\n.sk-blog-block.blog-cta.square .newsletter-form .hbspt-form form .hs-error-msgs {\n  position: relative !important;\n}\n\n@media screen and (min-width: 1025px) and (max-width: 1199px) {\n  .article-main-content .b1lock--bsk8 {\n    width: 142% !important;\n    margin-left: -42%;\n    position: relative;\n    z-index: 10000;\n  }\n}","@use 'sass:math';\n\n// COLORS\n$white: #fff;\n$black: #000;\n\n$gray-1: #dddddd;\n$gray-2: rgba(255, 255, 255, 0.4);\n$gray-3: rgba(255, 255, 255, 0.5);\n$gray-4: rgba(255, 255, 255, 0.2);\n$gray-5: rgba(255, 255, 255, 0.1);\n$gray-6: rgba(255, 255, 255, 0.05);\n$gray-7: #c9c9c9;\n$gray-8: rgba(255, 255, 255, 0.7);\n$gray-9: rgba(255, 255, 255, 0.65);\n$gray-10: #e2e8f9;\n$gray-11: rgba(255, 255, 255, 0.3);\n$gray-12: #d9d9d9;\n$gray-13: #ededed;\n$gray-14: #e7eaeb;\n$gray-15: #72868a;\n$gray-16: #f2f6fb;\n$gray-17: rgba(0, 0, 0, 0.1);\n$gray-18: #5b5b5b;\n$gray-19: #666666;\n$gray-20: #e0ece9;\n$gray-21: #f2f4fa;\n$gray-22: #4e4e4e;\n$gray-23: #f9fafe;\n$gray-24: #eef0f9;\n$gray-25: #f0f3fa;\n$gray-26: #e3e3e3;\n$gray-27: #dedede;\n\n$gray-35: #828282;\n$gray-36: #888888;\n$gray-34: #6f6f6f;\n\n$blue-1: #002ea6;\n$blue-2: #008fc5;\n$blue-3: #4d6dc1;\n$blue-4: #f2f9fc;\n$blue-5: #008fc4;\n$blue-6: #3358b8;\n$blue-7: #002fa7;\n$blue-8: #001753;\n$blue-9: rgba(0, 23, 83, 0.7);\n$blue-10: rgba(0, 143, 196, 0.7);\n$blue-11: #0633a8;\n$blue-12: #264db3;\n$blue-13: #1b44af;\n$blue-14: rgba(27, 155, 203, 0.3);\n$blue-15: #001a5d;\n$blue-16: #cedbff;\n$blue-17: #0139a8;\n$blue-18: #7f96d2;\n$blue-19: #b9feed;\n$blue-20: #f3fffc;\n$blue-21: #e3e8f5;\n$blue-22: #effffb;\n$blue-23: #6682ca;\n$blue-24: #66bcdc;\n$blue-25: #233e96;\n\n$green-1: #17fcc4;\n$green-2: #17fcc5;\n$green-3: #0557ac;\n$green-4: #12d3be;\n$green-5: #4aad52;\n$green-6: #45fdd0;\n$green-7: rgba(23, 252, 196, 0.2);\n$green-8: #e7fff9;\n$green-9: #a2fee7;\n$green-10: rgba(23, 252, 195, 0.24);\n$coral: rgb(252, 74, 107);\n$red-1: #fe0249;\n$red-2: #ff034a;\n$red-3: #e71111;\n$red-4: rgba(255, 3, 74, 0.3);\n$red-5: rgba(255, 3, 74, 0.1);\n$red-6: rgba(255, 3, 74, 0.4);\n$red-7: #fc4a6b;\n$red-8: rgba(252, 74, 107, 0.86);\n$red-9: #fd8096;\n$red-10: #fc4a6a;\n$red-11: #ffb3c8;\n$red-12: #fe295b;\n$red-13: #ffe5ed;\n$red-14: #ff9ab7;\n\n$pink-1: #fecad4;\n$pink-2: #fec8d2;\n\n$tableBG: #dcf7f0;\n\n$fw-bg: #f6f8fc;\n$lightBg: $fw-bg;\n\n// END COLORS\n\n$box-shadow: 0px 5px 24px 0px rgba(0, 46, 166, 0.1);\n$box-shadow-1: 0px 3px 20px 0.6px rgba(0, 0, 0, 0.1);\n\n$container-ext-widths: (\n  xs: 98%,\n  sm: 94%,\n  md: 90%,\n  lg: 950px,\n  xl: 1125px,\n  xxl: 1260px,\n  xxml: 1440px,\n  xxxl: 1575px,\n);\n\n// $grid-ext-breakpoints: (\n//   xs: 0,\n//   sm: 576px,\n//   md: 768px,\n//   lg: 1000px,\n//   xl: 1250px,\n//   xxl: 1400px,\n//   xxml: 1600px,\n//   xxxl: 1800px,\n// );\n\n$grid-ext-breakpoints: (\n  xs: 0,\n  sm: 320px,\n  sm-tablet: 576px,\n  md-tablet: 650px,\n  md: 768px,\n  sm-desktop: 868px,\n  lg: 1024px,\n  xl: 1200px,\n  xxl: 1400px,\n  xxml: 1500px,\n  xxxl: 1800px,\n);\n\n$grid-breakpoints: (\n  xs: 0,\n  sm: 320px,\n  sm-tablet: 576px,\n  md-tablet: 650px,\n  md: 768px,\n  sm-desktop: 868px,\n  lg: 1024px,\n  xl: 1200px,\n  xxl: 1400px,\n  xxml: 1500px,\n  xxxl: 1800px,\n);\n// $lgOffset: math.div(128px, 100vw) * 100;\n// :root {\n//   --lg-offset: 128px;\n// }\n\n// $container-max-widths: (\n//   // sm: calc(320px - (24px * 2)),\n//   sm-tablet: 100%,\n//   md-tablet: 100%,\n//   md: 90%,\n//   // sm-desktop: calc(868px - (64px * 2)),\n//   sm-desktop: 100%,\n//   // lg: calc(1024px - (64px * 2)),\n//   lg: calc(100% - var(--lg-offset)),\n//   xl: calc(1200px - (64px * 2)),\n//   xxl: calc(1400px - (148px * 2)),\n//   xxml: calc(1500px - (148px * 2)),\n//   xxxl: calc(1800px - (148px * 2))\n// );\n\n// $grid-breakpoints: (\n//   xs: 0,\n//   sm: 576px,\n//   md: 768px,\n//   lg: 992px,\n//   xl: 1200px,\n//   xxl: 1400px,\n//   xxml: 1600px,\n//   xxxl: 1800px,\n// );\n\n// $container-max-widths: (\n//   sm: $container-sm,\n//   md: $container-md,\n//   lg: $container-lg,\n//   xl: $container-xl,\n//   xxl: $container-xxl,\n//   xxxl: $container-xxxl,\n//   ws: $container-ws,\n// );\n\n$sk-block-padding: 100px;\n\n/////////////// Media Queries ///////////////\n$mobile_sm: 'max-width: 550px';\n$mobile_lg: 'min-width: 551px) and (max-width: 1024px';\n\n$max480: 'max-width: 478px';\n\n$min990: 'min-width: 990px';\n$max990: 'max-width: 989px';\n\n$min940: 'min-width: 940px';\n$max940: 'max-width: 939px';\n\n$min400: 'min-width: 400px';\n$max400: 'max-width: 399px';\n\n$min480: 'min-width: 479px';\n\n$min500: 'min-width: 500px';\n$max500: 'max-width: 499px';\n\n$min640: 'min-width: 640px';\n\n$min640max719: 'min-width: 640px) and (max-width: 719px';\n\n$min768: 'min-width: 768px';\n$max768: 'max-width: 767px';\n\n$min720: 'min-width: 720px';\n$max720: 'max-width: 719px';\n\n$min720: 'min-width: 768px';\n$max720: 'max-width: 767px';\n\n$min1024: 'min-width: 1025px';\n$max1024: 'max-width: 1024px';\n\n$min1200: 'min-width: 1200px';\n$max1200: 'max-width: 1199px';\n\n$min1250: 'min-width: 1250px';\n$max1250: 'max-width: 1249px';\n\n$min1280: 'min-width: 1281px';\n$min1366: 'min-width: 1367px';\n$min1440: 'min-width: 1441px';\n$min1600: 'min-width: 1599px';\n$min1660: 'min-width: 1661px';\n$min1800: 'min-width: 1800px';\n$min1920: 'min-width: 1921px';\n$max1920: 'max-width: 1920px';\n\n$desktop: 'min-width: 1025px';\n$tablet: 'min-width: 768px) and (max-width: 1024px';\n$mobile: 'max-width: 767px';\n\n$mobile_only: 'min-width: 480px) and (max-width: 767px';\n$mobile_all: 'max-width: 1024px';\n$minHeight: 'min-height: 800px';\n\n$mobile_640: 'max-width: 639px';\n$tablet_640: 'min-width: 640px) and (max-width: 1024px';\n\n$easeOutQuart: cubic-bezier(0.25, 1, 0.5, 1);\n$easeInOutCirc: cubic-bezier(0.85, 0, 0.15, 1);\n$easeOutCubic: cubic-bezier(0.33, 1, 0.68, 1);\n$easeOutSine: cubic-bezier(0.61, 1, 0.88, 1);\n\n$redhat: 'Red Hat Display', sans-serif;\n$font1: $redhat;\n$libre: 'Libre Franklin', sans-serif;\n$font2: $libre;\n\n$font-size-root: 18px;\n$ft-18: $font-size-root;\n\n$base-line-height: 30px;\n\n$h1-desktop-size: 64px;\n$h1-desktop-line-height: 75px;\n$h1-tablet-size: 44px;\n$h1-tablet-line-height: 62px;\n$h1-mobile-size: 40px;\n$h1-mobile-line-height: 38px;\n\n$h2-desktop-size: 48px;\n$h2-desktop-line-height: 61px;\n$h2-mobile-size: 32px;\n$h2-mobile-line-height: 40px;\n\n$h3-desktop-size: 32px;\n$h3-desktop-line-height: 40px;\n$h3-mobile-size: 24px;\n$h3-mobile-line-height: 36px;\n\n$h4-desktop-size: 28px;\n$h4-desktop-line-height: 30px;\n$h4-mobile-size: 22px;\n$h4-mobile-line-height: 24px;\n\n$h5-desktop-size: 24px;\n$h5-desktop-line-height: 30px;\n$h5-mobile-size: 18px;\n$h5-mobile-line-height: 24px;\n\n$h6-desktop-size: 20px;\n$h6-desktop-line-height: 24px;\n$h6-mobile-size: 16px;\n$h6-mobile-line-height: 20px;\n\n$text-highlight-desktop-size: 24px;\n$text-highlight-desktop-line-height: 36px;\n\n$text-highlight-mobile-size: 22px;\n$text-highlight-mobile-line-height: 30px;\n\n$start-empty: #a9a9ab;\n// Easings\n$easeOutQuart: cubic-bezier(\n  0.25,\n  1,\n  0.5,\n  1\n); // https://easings.net/#easeOutQuart\n$easeInOutCirc: cubic-bezier(\n  0.85,\n  0,\n  0.15,\n  1\n); // https://easings.net/#easeInOutCirc\n$easeOutCubic: cubic-bezier(\n  0.33,\n  1,\n  0.68,\n  1\n); // https://easings.net/#easeOutCubic\n$easeOutSine: cubic-bezier(\n  0.61,\n  1,\n  0.88,\n  1\n); // https://easings.net/#easeOutSine\n\n$ROOT_PATH: '/wp-content/themes/custom_theme/assets/';\n\n$paddingBottomText: 32px;\n$h1PaddingBottomText: 24px;\n$h2PaddingBottomText: 10px;\n\n$contentPadding: 27px;\n$desiredSpaceVW: 0vw;\n","// Gradients\n\n// scss-docs-start gradient-bg-mixin\n@mixin gradient-bg($color: null) {\n  background-color: $color;\n\n  @if $enable-gradients {\n    background-image: var(--#{$prefix}gradient);\n  }\n}\n// scss-docs-end gradient-bg-mixin\n\n// scss-docs-start gradient-mixins\n// Horizontal gradient, from left to right\n//\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\n@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {\n  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);\n}\n\n// Vertical gradient, from top to bottom\n//\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\n@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: null, $end-percent: null) {\n  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);\n}\n\n@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {\n  background-image: linear-gradient($deg, $start-color, $end-color);\n}\n\n@mixin gradient-x-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {\n  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);\n}\n\n@mixin gradient-y-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {\n  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);\n}\n\n@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {\n  background-image: radial-gradient(circle, $inner-color, $outer-color);\n}\n\n@mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {\n  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);\n}\n// scss-docs-end gradient-mixins\n","@mixin btn-download() {\n  // @include button-variant($blue-1, $white, $white, $green-1, $white, $blue-1);\n  @include button-variant($green-1, $blue-1, $blue-1, $blue-1, $white, $white);\n  padding: 8px 24px;\n  border-radius: 24px;\n  border: 1px solid transparent;\n  font-size: 16px;\n  font-weight: 700;\n  font-family: $redhat;\n  display: inline-flex;\n  align-items: center;\n  transition: all 0.3s ease;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    background-image: url($ROOT_PATH + 'media/icons/blue-arrow.svg');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    width: 24px;\n    height: 24px;\n    margin-right: 8px;\n    transform: rotate(180deg);\n    transition: all 0.3s ease-in-out;\n  }\n\n  &:hover,\n  &:active,\n  &:focus-within,\n  &:focus-visible {\n    flex-direction: row-reverse;\n    &:before {\n      margin-right: 0;\n      margin-left: 8px;\n      background-image: url($ROOT_PATH + 'media/icons/green-arrow.svg');\n    }\n  }\n\n  &:active,\n  &:focus-within,\n  &:focus-visible {\n    background-color: $blue-1 !important;\n    color: $white !important;\n    border-color: $white !important;\n  }\n}\n\n@mixin bs-btn {\n  display: inline-block;\n  padding: var(--#{$prefix}btn-padding-y) var(--#{$prefix}btn-padding-x);\n  font-family: var(--#{$prefix}btn-font-family);\n  @include font-size(var(--#{$prefix}btn-font-size));\n  font-weight: var(--#{$prefix}btn-font-weight);\n  line-height: var(--#{$prefix}btn-line-height);\n  color: var(--#{$prefix}btn-color);\n  text-align: center;\n  text-decoration: if($link-decoration == none, null, none);\n  white-space: $btn-white-space;\n  vertical-align: middle;\n  cursor: if($enable-button-pointers, pointer, null);\n  user-select: none;\n  border: var(--#{$prefix}btn-border-width) solid\n    var(--#{$prefix}btn-border-color);\n  @include border-radius(var(--#{$prefix}btn-border-radius));\n  @include gradient-bg(var(--#{$prefix}btn-bg));\n  @include box-shadow(var(--#{$prefix}btn-box-shadow));\n  @include transition($btn-transition);\n\n  &:hover {\n    color: var(--#{$prefix}btn-hover-color);\n    text-decoration: if($link-hover-decoration == underline, none, null);\n    background-color: var(--#{$prefix}btn-hover-bg);\n    border-color: var(--#{$prefix}btn-hover-border-color);\n  }\n\n  .btn-check + &:hover {\n    // override for the checkbox/radio buttons\n    color: var(--#{$prefix}btn-color);\n    background-color: var(--#{$prefix}btn-bg);\n    border-color: var(--#{$prefix}btn-border-color);\n  }\n\n  &:focus-visible {\n    color: var(--#{$prefix}btn-hover-color);\n    @include gradient-bg(var(--#{$prefix}btn-hover-bg));\n    border-color: var(--#{$prefix}btn-hover-border-color);\n    outline: 0;\n    // Avoid using mixin so we can pass custom focus shadow properly\n    @if $enable-shadows {\n      box-shadow: var(--#{$prefix}btn-box-shadow),\n        var(--#{$prefix}btn-focus-box-shadow);\n    } @else {\n      box-shadow: var(--#{$prefix}btn-focus-box-shadow);\n    }\n  }\n\n  .btn-check:focus-visible + & {\n    border-color: var(--#{$prefix}btn-hover-border-color);\n    outline: 0;\n    // Avoid using mixin so we can pass custom focus shadow properly\n    @if $enable-shadows {\n      box-shadow: var(--#{$prefix}btn-box-shadow),\n        var(--#{$prefix}btn-focus-box-shadow);\n    } @else {\n      box-shadow: var(--#{$prefix}btn-focus-box-shadow);\n    }\n  }\n\n  .btn-check:checked + &,\n  :not(.btn-check) + &:active,\n  &:first-child:active,\n  &.active,\n  &.show {\n    color: var(--#{$prefix}btn-active-color);\n    background-color: var(--#{$prefix}btn-active-bg);\n    // Remove CSS gradients if they're enabled\n    background-image: if($enable-gradients, none, null);\n    border-color: var(--#{$prefix}btn-active-border-color);\n    @include box-shadow(var(--#{$prefix}btn-active-shadow));\n\n    &:focus-visible {\n      // Avoid using mixin so we can pass custom focus shadow properly\n      @if $enable-shadows {\n        box-shadow: var(--#{$prefix}btn-active-shadow),\n          var(--#{$prefix}btn-focus-box-shadow);\n      } @else {\n        box-shadow: var(--#{$prefix}btn-focus-box-shadow);\n      }\n    }\n  }\n\n  &:disabled,\n  &.disabled,\n  fieldset:disabled & {\n    color: var(--#{$prefix}btn-disabled-color);\n    pointer-events: none;\n    background-color: var(--#{$prefix}btn-disabled-bg);\n    background-image: if($enable-gradients, none, null);\n    border-color: var(--#{$prefix}btn-disabled-border-color);\n    opacity: var(--#{$prefix}btn-disabled-opacity);\n    @include box-shadow(none);\n  }\n}\n","// stylelint-disable property-disallowed-list\n// Single side border-radius\n\n// Helper function to replace negative values with 0\n@function valid-radius($radius) {\n  $return: ();\n  @each $value in $radius {\n    @if type-of($value) == number {\n      $return: append($return, max($value, 0));\n    } @else {\n      $return: append($return, $value);\n    }\n  }\n  @return $return;\n}\n\n// scss-docs-start border-radius-mixins\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: valid-radius($radius);\n  }\n  @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n@mixin border-top-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n// scss-docs-end border-radius-mixins\n","// stylelint-disable scss/dimension-no-non-numeric-values\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query () {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query () {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + \" \" + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      } @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + \" \" + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    } @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + \" \" + $value;\n      } @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + \" calc(\" + $min-width + if($value < 0, \" - \", \" + \") + $variable-width + \")\";\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluid-val: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluid-val {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluid-val);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $fluid-val, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n","// stylelint-disable property-disallowed-list\n@mixin transition($transition...) {\n  @if length($transition) == 0 {\n    $transition: $transition-base;\n  }\n\n  @if length($transition) > 1 {\n    @each $value in $transition {\n      @if $value == null or $value == none {\n        @warn \"The keyword 'none' or 'null' must be used as a single argument.\";\n      }\n    }\n  }\n\n  @if $enable-transitions {\n    @if nth($transition, 1) != null {\n      transition: $transition;\n    }\n\n    @if $enable-reduced-motion and nth($transition, 1) != null and nth($transition, 1) != none {\n      @media (prefers-reduced-motion: reduce) {\n        transition: none;\n      }\n    }\n  }\n}\n","// Button variants\n//\n// Easily pump out default styles, as well as :hover, :focus, :active,\n// and disabled options for all buttons\n\n// scss-docs-start btn-variant-mixin\n@mixin button-variant(\n  $background,\n  $border,\n  $color: color-contrast($background),\n  $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount)),\n  $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount)),\n  $hover-color: color-contrast($hover-background),\n  $active-background: if($color == $color-contrast-light, shade-color($background, $btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount)),\n  $active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount)),\n  $active-color: color-contrast($active-background),\n  $disabled-background: $background,\n  $disabled-border: $border,\n  $disabled-color: color-contrast($disabled-background)\n) {\n  --#{$prefix}btn-color: #{$color};\n  --#{$prefix}btn-bg: #{$background};\n  --#{$prefix}btn-border-color: #{$border};\n  --#{$prefix}btn-hover-color: #{$hover-color};\n  --#{$prefix}btn-hover-bg: #{$hover-background};\n  --#{$prefix}btn-hover-border-color: #{$hover-border};\n  --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix($color, $border, 15%))};\n  --#{$prefix}btn-active-color: #{$active-color};\n  --#{$prefix}btn-active-bg: #{$active-background};\n  --#{$prefix}btn-active-border-color: #{$active-border};\n  --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};\n  --#{$prefix}btn-disabled-color: #{$disabled-color};\n  --#{$prefix}btn-disabled-bg: #{$disabled-background};\n  --#{$prefix}btn-disabled-border-color: #{$disabled-border};\n}\n// scss-docs-end btn-variant-mixin\n\n// scss-docs-start btn-outline-variant-mixin\n@mixin button-outline-variant(\n  $color,\n  $color-hover: color-contrast($color),\n  $active-background: $color,\n  $active-border: $color,\n  $active-color: color-contrast($active-background)\n) {\n  --#{$prefix}btn-color: #{$color};\n  --#{$prefix}btn-border-color: #{$color};\n  --#{$prefix}btn-hover-color: #{$color-hover};\n  --#{$prefix}btn-hover-bg: #{$active-background};\n  --#{$prefix}btn-hover-border-color: #{$active-border};\n  --#{$prefix}btn-focus-shadow-rgb: #{to-rgb($color)};\n  --#{$prefix}btn-active-color: #{$active-color};\n  --#{$prefix}btn-active-bg: #{$active-background};\n  --#{$prefix}btn-active-border-color: #{$active-border};\n  --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};\n  --#{$prefix}btn-disabled-color: #{$color};\n  --#{$prefix}btn-disabled-bg: transparent;\n  --#{$prefix}btn-disabled-border-color: #{$color};\n  --#{$prefix}gradient: none;\n}\n// scss-docs-end btn-outline-variant-mixin\n\n// scss-docs-start btn-size-mixin\n@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {\n  --#{$prefix}btn-padding-y: #{$padding-y};\n  --#{$prefix}btn-padding-x: #{$padding-x};\n  @include rfs($font-size, --#{$prefix}btn-font-size);\n  --#{$prefix}btn-border-radius: #{$border-radius};\n}\n// scss-docs-end btn-size-mixin\n"]}